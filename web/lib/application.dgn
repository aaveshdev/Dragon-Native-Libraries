
include "std.dgn"

Package System.Web

Class Application{

		cStart = ""
		cCookies = ""
		cOutput = ""
		cCSS = ""
		Title = "Test"
		cBody = ""
		nTabs = 1
		lBootstrap = False
		lTailwind= False
		lPrint = True
		cPrintString = ""

		lContentType = True

		func WebPrint (cStr){
			if lPrint
				showln cStr
			else 
				cPrintString += cStr
			end
		}

		func NoOutput(){
			lPrint = False
			cPrintString = ""
			lContentType = False 
		}

		func Output(){	
			return cPrintString
		}

		Func DecodeString (cStr){
			cStr = cStr + "&" 
			aOutput = [] 	
			aRes = [] 
			cValue = ""
			for x = 1 to len(cStr)
				t = cStr[x]
				if t = "="  
					aRes + cValue
					cValue = ""
				elif t = "&" 
					aRes + cValue
					cValue = "" 
					aOutput + aRes
					aRes = []
				elif t = "+"
					cValue = cValue + " "
				elif t = "%"
					cValue = cValue + hex2str(cStr[x+1]+cStr[x+2])
					x = x+2
				elif t = '"'
				else 
					cValue = cValue + t 
				end
			end
			return aOutput
		}

		Func Decode (cInput){
			if left(sysget("CONTENT_TYPE"),20) != "multipart/form-data;"
				return decodestring(cInput)
			end

			# Decode (File Uploading)

			nPos = substr(cInput,"Content-Disposition") 
			cMark = left(cInput,nPos-3)

			VarsList = []

			fileType = ""


			while true

				NewVar = [] # List contains the new variable
				nPos = substr(cInput,'"')  # start of the name

				cInput = substr(cInput,nPos+1) #remove before start
				nPos = substr(cInput,'"')  # end of the name

				NewVar + left(cInput,nPos-1)	# add Name to List
				cInput = substr(cInput,nPos+1) # after name	

				if left(cInput,1) = ";"

					nPos = substr(cInput,'"')  # start of the file name
					cInput = substr(cInput,nPos+1) # after file name
					nPos = substr(cInput,'"')  # end of the file name
					cFile = left(cInput,nPos-1)	# File Name to be added to the List
				
					nPos2 = substr(cInput,"Content-Type") 
			    	type = split(substr(cInput,nPos2)," ")
			    	if(cFile != ""){
			    		fileType = type[2] # File Content Type to be added to the list
			    	else

			    		fileType = ""
			    	}
			    	
					
					for x = 1 to 3
						nPos = substr(cInput,newline)
						cInput = substr(cInput,nPos+1) # after new line
					end

					nPos = substr(cInput,cMark) 
					NewVar + left(cInput,nPos-2)    # Get File content
					NewVar + cFile			# Add file Name

					NewVar + fileType # Add file content type
					cInput = substr(cInput,nPos)
						


					
				else

					for x = 1 to 2
						nPos = substr(cInput,newline)
						cInput = substr(cInput,nPos+1) # after new line
					end

					nPos = substr(cInput,newline)
					NewVar + left(cInput,nPos-1)

					cInput = substr(cInput,nPos+1) # after value

				end

				VarsList + NewVar

				nPos = substr(cInput,cMark) 

				if substr(cInput,cMark+"--") = nPos
					break
				end
			end

			return VarsList
		}




		
		Func GetFileName  (aArray,cVar){
			for x=1 to len(aArray)
				if len(aArray) >= 3
					if aArray[1] = cVar
						return WL_justfilename(aArray[3])
					end
				end
			end
			return "NULL"
		}

		Func setcookie (name,value,expires,path,domain,secure){
			cCookies += "Set-Cookie: "+name+"="+value+"; expires="+expires+
				    "; path="+path+"; domain="+domain+"; "+secure + "; HttpOnly"+ newline
		}

		Func cookie (name,value){
			cCookies += "Set-Cookie: "+name+"="+value+";" + newline
		}

		Func getcookies (){
			cStr = sysget("HTTP_COOKIE")
			if cStr = "NULL" 	return 	end 
			# var1=value; var2=value; var3=value
			cStr += ";"
			aOutput = [] 	 
			nPos = substr(cStr,";")
			While nPos > 0
				nPos2 = substr(cStr,"=") 
				if nPos2 = 0 break end
				aRes = []
				aRes + trim(left(cStr,nPos2-1))
				aRes + substr(cStr,nPos2+1,nPos-nPos2-1)
				aOutput + aRes 
				cStr = substr(cStr,nPos+1)
				nPos = substr(cStr,";")
			end
			return aOutput
		}

		Func URLEncode (cStr){
			cOut = ""
			for x : cStr
				if isalnum(x)
					cOut += x
				elif x = " "
					cOut += "+"
				else
					cOut += "%"+str2hex(x)
				end
			end
			return cOut	
		}

		
		Func ScriptLibs(){
			if lBootstrap
				cStr = newline+'<meta name="viewport" content="width=device-width, initial-scale=1">' + newline +
  				       '<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">'+newline+
				       '<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>'+newline+
			 	       '<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>'+newline
			elif lTailwind
			  	cStr = newline+'<meta name="viewport" content="width=device-width, initial-scale=1">' + newline +
				       '<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>'+newline+
			 	       '<link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet">'+newline
			else
				cStr = newline+'<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>'+newline
			end	
			return TabMLString(cStr)
		}

		Func Print(){
			WebPrint( cCookies + GetHTMLStart() +"<!DOCTYPE html>"+WindowsNL()+
			newline+'<html lang="en">' + newline +
			"<head>"+newline+CHAR(9)+scriptlibs()+newline+
			CHAR(9)+"<title>"+Title+"</title>"+newline+
			"<meta charset='UTF-8'>" + newline )
			if cCSS != NULL
				WebPrint( Char(9)+"<style>"+newline+CHAR(9)+CHAR(9)+cCSS+newline+Char(9)+"</style>"+newline )
			end
			WebPrint( newline+"</head>" + newline +
			"<body"+ cBody + "> " + newline + cOutput + newline + "</body>" + newline + "</html>" )

		}

		Func BlankPrint(){
			WebPrint( cCookies + GetHTMLStart())
			
			WebPrint( newline+ cOutput )

		}


		Func style (cStyle){
			cCSS += cStyle 
		}

		Func starthtml (){

			cStart = "Content-type: text/html" + newline + newline +
				   "<meta charset='UTF-8'>" + newline
		}

		Func emptyhtml (){

			cStart = "Content-type: text/html" + newline + newline +
				     newline
		}

		Func GetHTMLStart(){
			if lContentType 
				return cStart
			else 
				return ""
			end
		}

		Func TabPush(){
				nTabs++
		}

		Func TabPOP(){
				nTabs--
		}

		Func GetTabs(){
				return copy(char(9),nTabs)
		}

		Func TabMLString (cStr){
			aList = str2list(cStr)
			for t : aList
				t = GetTabs() + t
			end
			return list2str(aList)
		}		

}
